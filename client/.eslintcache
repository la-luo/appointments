[{"/Users/laluo/work/interviews/notable/client/src/index.js":"1","/Users/laluo/work/interviews/notable/client/src/App.js":"2","/Users/laluo/work/interviews/notable/client/src/reportWebVitals.js":"3","/Users/laluo/work/interviews/notable/client/src/components/appointment.js":"4"},{"size":501,"mtime":1610309317037,"results":"5","hashOfConfig":"6"},{"size":367,"mtime":1610238454839,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610213305811,"results":"8","hashOfConfig":"6"},{"size":2796,"mtime":1610311395135,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"cxpo",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/laluo/work/interviews/notable/client/src/index.js",[],["21","22"],"/Users/laluo/work/interviews/notable/client/src/App.js",["23","24"],"import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Appointments from './components/appointment';\n\n\nclass App extends React.Component {\n  render () {\n    return <BrowserRouter>\n    <div className=\"App\">\n      <Route path=\"/\" component={Appointments} />\n    </div>\n  </BrowserRouter>\n  }\n}\n\nexport default App;\n","/Users/laluo/work/interviews/notable/client/src/reportWebVitals.js",[],"/Users/laluo/work/interviews/notable/client/src/components/appointment.js",["25"],"import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport axios from 'axios';\n\n\nclass Appointments extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            doctors: [],\n            apps:[],\n            selectedDoctor: ''\n\n        }\n        this.showApps = this.showApps.bind(this);\n\n    }\n\n\n    componentDidMount() {\n        axios.get('http://localhost:3001/api/doctors/')\n            .then(res => {\n                this.setState({doctors: res.data})\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n\n    showApps(doctor) {\n        console.log(doctor);\n        axios.get(`http://localhost:3001/api/doctors/${doctor._id}/apps`)\n        .then(res => {\n            this.setState({apps: res.data})\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n        this.setState({selectedDoctor: doctor})\n    }\n    \n\n    render() {\n        console.log(this.state);\n        const doctors = this.state.doctors;\n        const apps = this.state.apps;\n        const selectedDoctor = this.state.selectedDoctor;\n\n        return (\n            <div className=\"container\">\n                <div className=\"nav\">\n                    <h2 className=\"logo\">Notable</h2>\n                    <label>Physicians</label>\n                    <ul>\n                        {doctors.map((doctor, idx) => (\n                            <li key={idx}><button onClick={() => this.showApps(doctor)}> {doctor.name}</button></li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"apps\">\n                        <h2>{selectedDoctor.name}</h2>\n                        <h4>{selectedDoctor.email}</h4>\n                {  selectedDoctor && <table className=\"table table-striped table-hover\">\n                    <thead>\n                        <tr className=\"table-head\">\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Time</th>\n                            <th>Kind</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n      \n                        {apps.map((app, idx) => \n                          (\n                            <tr key={idx}>\n                                <td>{idx+1}</td>\n                                <td>{app.name}</td>\n                                <td>{app.time}</td>\n                                <td>{app.kind}</td>\n\n                            </tr>)\n                          )\n                        }\n                    </tbody>\n                </table>}\n                </div>\n                <br />\n\n            </div>\n        )\n    }\n\n}\nexport default withRouter(Appointments);",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":2,"column":25,"nodeType":"32","messageId":"33","endLine":2,"endColumn":31},{"ruleId":"30","severity":1,"message":"34","line":2,"column":40,"nodeType":"32","messageId":"33","endLine":2,"endColumn":48},{"ruleId":"30","severity":1,"message":"35","line":2,"column":9,"nodeType":"32","messageId":"33","endLine":2,"endColumn":13},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]